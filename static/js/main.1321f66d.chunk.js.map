{"version":3,"sources":["images/profil.jpg","images/profil2.jpg","images/profil3.jpg","serviceWorker.js","CardName/CardName.js","Navbar.js","App.js","home.js","contact.js","Main.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","CardData","state","total","totalmin","totalsuccess","handleTotalChange","newValue","props","onTotalChange","handleClickPositive","setState","handleClickNegative","className","gutter","title","job","map","data","span","bordered","shape","icon","LikeOutlined","onClick","DislikeOutlined","value","suffix","Component","Navbar","Menu","SubMenu","current","handleClick","e","console","log","key","this","selectedKeys","mode","Item","to","App","Home","offset","effect","src","profil2","profil","profil3","label","Main","basename","process","path","exact","component","Kontak","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1321f66d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profil.1fef7c02.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profil2.747f61d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profil3.7bda3917.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from 'react';\r\nimport './CardName.css';\r\nimport { Card, Col, Row } from 'antd';\r\nimport { Statistic } from 'antd';\r\nimport { LikeOutlined, DislikeOutlined } from '@ant-design/icons';\r\nimport { Menu } from 'antd';\r\nimport { Button } from 'antd';\r\n\r\nclass CardData extends Component{\r\n  state={\r\n    total: 50,\r\n    totalmin: 40,\r\n    totalsuccess: 0\r\n  }\r\n\r\n  handleTotalChange = (newValue) => {\r\n    this.props.onTotalChange(newValue)\r\n  }\r\n\r\n  handleClickPositive = () => {\r\n    this.setState({\r\n      total: this.state.total + 1,\r\n      totalsuccess: this.state.totalsuccess + 1\r\n    }, () => {\r\n      this.handleTotalChange(this.state.total, this.state.totalsuccess);\r\n    })\r\n  }\r\n\r\n  handleClickNegative = () => {\r\n    this.setState({\r\n      totalmin: this.state.totalmin + 1\r\n    }, () => {\r\n      this.handleTotalChange(this.state.totalmin);\r\n    })\r\n  }\r\n\r\n  render(){\r\n      const cardData = [\r\n        {\r\n          title:\"Prawito\",\r\n          job:\"FrontEnd Dev\",\r\n        },\r\n        {\r\n          title:\"Handoko\",\r\n          job:\"Project Manager\",\r\n        },\r\n        {\r\n          title:\"Budi\",\r\n          job:\"UI Designer\",\r\n        },\r\n        {\r\n          title:\"Setia\",\r\n          job:\"UI Designer\",\r\n        },\r\n        {\r\n          title:\"Ani\",\r\n          job:\"Web Developer\",\r\n        },\r\n        {\r\n          title:\"Mari\",\r\n          job:\"IT Analyst\",\r\n        },\r\n        {\r\n          title:\"Prawito\",\r\n          job:\"FrontEnd Dev\",\r\n        },\r\n        {\r\n          title:\"Handoko\",\r\n          job:\"Project Manager\",\r\n        },\r\n        {\r\n          title:\"Budi\",\r\n          job:\"UI Designer\",\r\n        }\r\n      ]\r\n    return (      \r\n      <div className=\"site-card-wrapper\">\r\n      <Row gutter={16}>\r\n        {cardData.map(data =>\r\n          <Col span={8}>\r\n          <Card title=\"Nama Pegawai\" bordered={false}>\r\n            \r\n            <p className=\"title\">{data.title}</p>\r\n            <p className=\"subtitle\">{data.job}</p>\r\n            <p><Button className=\"button\" shape=\"round\" icon={<LikeOutlined />} onClick={this.handleClickPositive}></Button>\r\n            <Button className=\"button\" shape=\"round\" icon={<DislikeOutlined />} onClick={this.handleClickNegative}></Button></p>\r\n            <p className=\"statistik\"><Statistic title=\"Disukai\" value={this.state.total} /></p>\r\n            <p className=\"statistik\"><Statistic title=\"Tidak Disukai\" value={this.state.totalmin} /></p>\r\n            <p className=\"statistika\"><Statistic title=\"Statistik Keberhasilan\" value={this.state.totalsuccess} suffix=\"/ 100\" /></p>\r\n          </Card>\r\n          </Col>\r\n          )}\r\n      </Row>\r\n      </div>//]\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardData;\r\n","import { Menu } from 'antd';\r\nimport React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    current: 'mail',\r\n  };\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Menu className=\"menu\" onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\r\n        <Menu.Item>\r\n          <Link to=\"/profil\">Profil</Link>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Link to=\"/divisi-it\">Pegawai</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"mail\">\r\n          <Link to=\"/kontak\">Kontak</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport { PageHeader } from 'antd';\r\nimport CardName from './CardName/CardName';\r\nimport Navbar from './Navbar';\r\n\r\nclass App extends Component{\r\n  state={\r\n    total: 50,\r\n    totalmin: 40,\r\n    totalsuccess: 0\r\n  }\r\n\r\n  handleTotalChange = (newValue) => {\r\n    this.setState({\r\n      total: newValue,\r\n      totalmin: newValue,\r\n      totalsuccess: newValue\r\n    });\r\n  }\r\n\r\n  render(){  \r\n    return (\r\n      [\r\n      \r\n      <Navbar/>,\r\n      <div className=\"header-wrapper\">\r\n        <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"Divisi IT PT Inovasi\"\r\n      />\r\n      </div>,\r\n\r\n      <CardName onTotalChange={(value) => this.handleTotalChange(value)}/>]\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, {Component} from 'react';\r\nimport './home.css'\r\nimport Navbar from './Navbar';\r\nimport profil from './images/profil.jpg';\r\nimport profil2 from './images/profil2.jpg';\r\nimport profil3 from './images/profil3.jpg';\r\nimport { Carousel, Row, Col } from 'antd';\r\n\r\nclass Home extends Component{\r\n\r\n    render(){\r\n        return(\r\n            [\r\n            <Navbar/>,\r\n            <div className=\"title-profil\" >PT INOVASI\r\n            <Row>\r\n                <Col span={12} offset={5}>\r\n                    <Carousel className=\"carousel\" effect=\"fade\">\r\n                        <div>\r\n                            <img src={profil2}></img>\r\n                        </div>\r\n                        <div>\r\n                            <img src={profil}></img>\r\n                        </div>\r\n                        <div>\r\n                            <img src={profil3}></img>\r\n                        </div>\r\n                    </Carousel>\r\n                </Col>\r\n            </Row>\r\n            </div>,\r\n            <div >\r\n                <p className=\"desc\">PT Inovasi adalah perusahaan yang bergerak di bidang arsitektur dan mengedepankan\r\n                inovasi dalam setiap detail pengerjaannya. Misi dari PT Inovasi adalah mendayakembangkan segala bentuk\r\n                karya arsitektur menjadi sebuah seni yang berestetika tinggi. PT Inovasi telah bergerak lebih dari 10\r\n                tahun dan mengembangkan lebih dari 50 karya yang dapat dinikmati hasilnya di berbagai penjuru Indonesia. </p>\r\n            </div>]\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport './contact.css'\r\nimport Navbar from './Navbar';\r\nimport { Descriptions } from 'antd';\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return(\r\n            [\r\n            <Navbar/>,\r\n            <div>\r\n                <Descriptions className=\"contact\" title=\"PT Inovasi\" bordered>\r\n                    <Descriptions.Item label=\"Nama Perusahaan\">PT Inovasi</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Telepon\">1810000000</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Email\">creative@inovasi.com</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Negara\">Indonesia</Descriptions.Item>\r\n                    <Descriptions.Item label=\"Alamat\">\r\n                    Jl. Persatuan, Indonesia\r\n                    </Descriptions.Item>\r\n                </Descriptions>,\r\n            </div>]\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport App from './App';\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport {Switch} from \"react-router-dom\";\r\nimport Home from './home'\r\nimport Kontak from './contact';\r\n\r\nclass Main extends Component{\r\n    render(){\r\n        return(\r\n            <Router basename={process.env.PUBLIC_URL}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home}/>\r\n                    <Route path=\"/profil\" component={Home}/>\r\n                    <Route path=\"/divisi-it\" component={App}/>\r\n                    <Route path=\"/kontak\" component={Kontak}/>\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Main from './Main';\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}